#!/usr/bin/env python3
import asyncio
from mcp import ClientSession
from mcp.client.streamable_http import streamablehttp_client

SERVER = "http://127.0.0.1:3000/mcp"

async def main() -> None:
    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ open a streamable-HTTP transport â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    async with streamablehttp_client(SERVER) as (read, write, get_sid):
        # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ open an MCP session â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
        async with ClientSession(read, write) as session:
            await session.initialize()
            print("â§‰ Session-ID (stateless):", get_sid(), "\n")

            # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ping / liveness â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
            await session.send_ping()
            print("âœ… Ping OK\n")

            # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ discover your resources â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
            res_defs = await session.list_resources()
            list_uri = str(res_defs.resources[0].uri)
            print("ðŸ“‚ discovered resource URI for listing products:", list_uri)

            # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ discover your tools â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
            tool_defs = await session.list_tools()
            create_tool = tool_defs.tools[0].name
            print("ðŸ”§ discovered tool name for creating products:", create_tool, "\n")

            # â”€â”€ 1) fetch all products â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
            all_prod = await session.read_resource(list_uri)
            print("ðŸ“¦ All products:", all_prod.contents[0].text, "\n")

            # â”€â”€ 2) create a new product (flattened args!) â”€â”€â”€â”€â”€â”€
            new_prod = await session.call_tool(
                create_tool,
                {
                    "name": "Widget",      # <â€” pass these at top level
                    "price": 19.99
                }
            )
            print("âž• Created product:", new_prod.content[0].text, "\n")

            # â”€â”€ 3) fetch updated list â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
            updated = await session.read_resource(list_uri)
            print("ðŸ”„ Updated products:", updated.contents[0].text)

if __name__ == "__main__":
    asyncio.run(main())
